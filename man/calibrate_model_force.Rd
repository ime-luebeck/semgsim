% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.r
\name{calibrate_model_force}
\alias{calibrate_model_force}
\title{Calibrate force values}
\usage{
calibrate_model_force(
  model,
  time_limits = c(0, 20),
  muscle_force = sapply(row.names(model$muscles), function(x) function(t) {
     dT =
    1/model$Fs
     T = 4
     aux = function(t) {
         t = t\%\%T
         if (t <
    0.25 * T) {
             return(0)
         }
         else if (t < 0.5 * T) {
      
          return(4/T * t - 1)
         }
         else if (t < 0.75 * T) {
            
    return(1)
         }
         else {
             return(-4/T * t + 4)
         }
   
     }
     sapply(t, aux)
 }),
  deterministic = FALSE,
  delay = 0.06
)
}
\arguments{
\item{model}{Produced by \code{calculate_semg_TFs()}.}

\item{time_limits}{Optional. Two-elements vector limiting the
time axis. If \code{NULL} then \code{muscle_force} is assumed to be a
matrix or data frame which determines the time axis.}

\item{muscle_force}{Either a list of muscle force functions
(one function per muscle) or a matrix with dimension
[time x muscles] or a vector (only one muscle).}

\item{deterministic}{Option sets seed for reproducible random
numbers.}

\item{delay}{Rough estimate of delay between force target and
simulated force.}
}
\description{
The amplitude of the simulated force is not necessarily similar
to the amplitude of the force target provided by the parameter
muscle force. While the target is in the range between 0 and 1
the amplitude of the resulting simulation is not known beforehand.
Thus, a calibration is needed to determine the gain.
}
\examples{
model = readRDS("integration.rds")
model = calibrate_model_force(model)
cat(model$muscles$force_gain)
}
