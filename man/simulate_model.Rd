% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.r
\name{simulate_model}
\alias{simulate_model}
\title{Run simulation based on existing \code{model}}
\usage{
simulate_model(
  model,
  muscle_force = NULL,
  time_limits = NULL,
  deterministic = FALSE,
  out_file = NULL,
  num_cores = future::availableCores(omit = 1),
  parallel = c("sample", "chunk")
)
}
\arguments{
\item{model}{Produced by \code{\link[=calculate_semg_TFs]{calculate_semg_TFs()}}.}

\item{muscle_force}{Either a list of muscle force functions
(one function per muscle) or a matrix with dimension
[time x muscles] or a vector (only one muscle).}

\item{time_limits}{Optional. Two-elements vector limiting the
time axis. If \code{NULL} then \code{muscle_force} is assumed to be a
matrix or data frame which determines the time axis.}

\item{deterministic}{Option sets seed for reproducible random
numbers. Note that the results are not identical if
\code{\link[=simulate_model]{simulate_model()}} is called with \code{parallel="sample"} or with
\code{parallel="chunk"}. The reason is that the sequence of calling
the random number generator is different.}

\item{out_file}{Optional. If given, specifies a file to save
the simulation \code{environment()}. Results can be loaded via
\code{readRDS(out_file)} afterwards.}

\item{num_cores}{Optional. Number of cores to use for various
parts of the simulation that can be performed in parallel.
Default = all available cores minus 1.}

\item{parallel}{Specifies whether calculation is performed
\code{sample} by sample or as one \code{chunk}. The \code{future} framework
is used for parallel computation. \code{sample} by sample performs
simulation samplewise internally. However, it should not
be confounded with \code{\link[=init.simulate_model_stepwise]{init.simulate_model_stepwise()}} which
provides an interface to explicitly allow stepwise (e.g.,
samplewise) calculatione, e.g., for realtime processing.}
}
\description{
The simulation is based on already existing setup and transfer
functions available via parameter \code{model}.
}
\details{
This simulation is equivalent to \code{\link[=init.simulate_model_stepwise]{init.simulate_model_stepwise()}}
below except that execution is performed in one step. Moreover,
motor unit (MU) impulse trains and contribs are saved in \code{out_file}
or are returned.
}
\examples{
# This may take long because transfer functions have to be calculated, initially:
model <- calculate_semg_TFs(setup_muscles("config/integration.r", deterministic = TRUE), deterministic = TRUE) 
saveRDS(model, file="integration.rds")

# Now run the simulation:
model <- simulate_model(model, model$force_functions, model$time_limits, num_cores=1, parallel="chunk", deterministic=TRUE)

# Run simulation in "chunk" mode on input array of force data:
force_vals = as.data.frame(model$load_vals$force)[1:20,]
model <- simulate_model(model, as.matrix(force_vals), num_cores=1, parallel="chunk", deterministic=TRUE)

# Run simulation in "sample" mode:
model <- simulate_model(model, as.matrix(force_vals), num_cores=1, parallel="sample", deterministic=TRUE)

# return muscle force
model$muscle_contribs$force
}
